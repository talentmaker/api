name: Deploy to Lambda

# Note: use yarn to remove dev dependencies later

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build:prod

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build

      - name: Install deps
        working-directory: ./build
        run: yarn install --prod --ignore-optional

      - name: list
        working-directory: ./build
        run: ls -a

      - name: decrypt .env
        run: echo '${{ secrets.ENV_DECRYPT_KEY }}' | gpg --batch --yes --passphrase-fd 0 --output ./build/.env --decrypt ./build/.env.gpg

      - name: Deploy to AWS Lambda
        working-directory: ./build
        run: npx serverless@~2.51.2 deploy function --function main --config ./serverless.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  migrate:
    name: migrate
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"

      - name: decrypt .env
        run: echo '${{ secrets.ENV_DECRYPT_KEY }}' | gpg --batch --yes --passphrase-fd 0 --output .env --decrypt .env.gpg

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: generate prisma
        run: yarn prismaGenerate

      - name: migrate
        run: yarn prisma migrate deploy
